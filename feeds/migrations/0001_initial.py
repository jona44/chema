# Generated by Django 5.2.5 on 2025-09-29 19:17

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('group', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=500)),
                ('is_multiple_choice', models.BooleanField(default=False)),
                ('allow_other_option', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('allow_posts', models.BooleanField(default=True)),
                ('allow_media', models.BooleanField(default=True)),
                ('allow_polls', models.BooleanField(default=True)),
                ('allow_events', models.BooleanField(default=True)),
                ('allow_anonymous_posts', models.BooleanField(default=False)),
                ('require_approval', models.BooleanField(default=False, help_text='Posts need admin approval')),
                ('auto_moderate_keywords', models.TextField(blank=True, help_text='Comma-separated keywords to flag')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feed', to='group.group')),
            ],
        ),
        migrations.CreateModel(
            name='Memorial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField()),
                ('date_of_death', models.DateField()),
                ('age_at_death', models.PositiveIntegerField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='memorials/')),
                ('biography', models.TextField(help_text='Tell their story, achievements, and impact')),
                ('location_of_death', models.CharField(blank=True, max_length=200)),
                ('burial_location', models.CharField(blank=True, max_length=200)),
                ('cultural_background', models.CharField(blank=True, max_length=100)),
                ('religious_affiliation', models.CharField(blank=True, max_length=100)),
                ('traditional_names', models.CharField(blank=True, help_text='Traditional/clan names', max_length=200)),
                ('funeral_date', models.DateTimeField(blank=True, null=True)),
                ('funeral_venue', models.CharField(blank=True, max_length=300)),
                ('funeral_details', models.TextField(blank=True, help_text='Service details, dress code, etc.')),
                ('is_public', models.BooleanField(default=False, help_text='Can non-group members view?')),
                ('allow_condolences', models.BooleanField(default=True)),
                ('allow_memories', models.BooleanField(default=True)),
                ('allow_photos', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('associated_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memorial', to='group.group')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_memorials', to=settings.AUTH_USER_MODEL)),
                ('family_admins', models.ManyToManyField(blank=True, related_name='administered_memorials', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PollOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=200)),
                ('votes_count', models.PositiveIntegerField(default=0)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='feeds.poll')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('post_type', models.CharField(choices=[('text', 'Text Post'), ('photo', 'Photo Post'), ('video', 'Video Post'), ('link', 'Link Share'), ('poll', 'Poll'), ('event', 'Event'), ('question', 'Question'), ('announcement', 'Announcement'), ('memory', 'Memory/Story'), ('condolence', 'Condolence Message'), ('tribute', 'Tribute/Poem'), ('funeral_update', 'Funeral Update'), ('claim_discussion', 'Claim Discussion'), ('policy_question', 'Policy Question'), ('advice_request', 'Advice Request'), ('case_study', 'Case Study'), ('recommendation', 'Recommendation'), ('help_request', 'Help Request'), ('marketplace', 'Buy/Sell'), ('job_posting', 'Job Posting')], default='text', max_length=20)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('content', models.TextField(blank=True)),
                ('link_url', models.URLField(blank=True)),
                ('link_title', models.CharField(blank=True, max_length=200)),
                ('link_description', models.TextField(blank=True)),
                ('link_image', models.URLField(blank=True)),
                ('location', models.CharField(blank=True, max_length=300)),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('event_end_date', models.DateTimeField(blank=True, null=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_urgent', models.BooleanField(default=False)),
                ('privacy_level', models.CharField(choices=[('public', 'Public to Group'), ('members_only', 'Members Only'), ('admins_only', 'Admins Only'), ('close_friends', 'Close Friends')], default='public', max_length=20)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flagged_reason', models.CharField(blank=True, max_length=100)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='feeds.feed')),
                ('memorial_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feed_posts', to='feeds.memorial')),
            ],
            options={
                'ordering': ['-is_pinned', '-is_urgent', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='poll',
            name='post',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='poll', to='feeds.post'),
        ),
        migrations.CreateModel(
            name='FeedActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('view', 'View Post'), ('like', 'Like Post'), ('comment', 'Comment'), ('share', 'Share'), ('click_link', 'Click Link'), ('join_event', 'Join Event'), ('vote_poll', 'Vote in Poll')], max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='feeds.post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(max_length=2000)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='feeds.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='feeds.post')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_type', models.CharField(choices=[('like', '👍'), ('love', '❤️'), ('haha', '😂'), ('wow', '😮'), ('sad', '😢'), ('angry', '😠'), ('care', '🤗'), ('pray', '🙏')], default='like', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='feeds.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_post_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostMedia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document')], max_length=10)),
                ('file', models.FileField(upload_to='feed_media/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='feed_thumbnails/')),
                ('caption', models.CharField(blank=True, max_length=500)),
                ('alt_text', models.CharField(blank=True, help_text='For accessibility', max_length=200)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='feeds.post')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PostShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='feeds.post')),
                ('shared_to_feed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shared_posts', to='feeds.feed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='feeds.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_comment_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'comment')},
            },
        ),
        migrations.CreateModel(
            name='PollVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_text', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='feeds.polloption')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'option')},
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['feed', '-created_at'], name='feeds_post_feed_id_3f0f24_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['author', '-created_at'], name='feeds_post_author__711664_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['post_type', '-created_at'], name='feeds_post_post_ty_1f7961_idx'),
        ),
        migrations.AddIndex(
            model_name='feedactivity',
            index=models.Index(fields=['user', '-created_at'], name='feeds_feeda_user_id_c883c0_idx'),
        ),
        migrations.AddIndex(
            model_name='feedactivity',
            index=models.Index(fields=['post', 'activity_type'], name='feeds_feeda_post_id_7b74af_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post', 'created_at'], name='feeds_comme_post_id_d0cc2a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='postlike',
            unique_together={('user', 'post')},
        ),
        migrations.AlterUniqueTogether(
            name='postshare',
            unique_together={('user', 'post', 'shared_to_feed')},
        ),
    ]
